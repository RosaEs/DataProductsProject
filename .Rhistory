{rul<-"TRUE"}
if(bdmodif$pairs[n]==0)
{
if(rul)
{cont<-cont +1 }
rul<-"FALSE"
}
}
print(cont)
?rcauchy()
?p.adjust()
set.seed(
1010093
)
pValues <- rep(
NA
,
1000
)
for
(i
in
1
:
1000
){
x <- rnorm(
20
)
# First 500 beta=0, last 500 beta=2
if
(i <=
500
){y <- rnorm(
20
)}
else
{ y <- rnorm(
20
,mean=
2
*x)}
pValues[i] <- summary(lm(y ~ x))$coeff[
2
,
4
]
}
trueStatus <- rep(c(
"zero"
,
"not zero"
),each=
500
)
table(pValues <
0.05
, trueStatus)
trueStatus
pValues
n<-103
num<-0
for(i in n:1){
num<-num + (n-i)
}
print num
n<-103
num<-0
for(i in n:1){
num<-num + (n-i)
}
num
n<-5
num<-0
for(i in n:1){
num<-num + (n-i)
}
num
n<-4
num<-0
for(i in n:1){
num<-num + (n-i)
}
num
n<-3
num<-0
for(i in n:1){
num<-num + (n-i)
}
num
n<-103
num<-0
for(i in n:1){
num<-num + (n-i)
}
num
bigdata.edu_Data.Sets_data.coursera.sn.asgn1.for.asgn8.v2excell <- read.csv("C:/Users/Rosa/coursera_BigData/w8/bigdata-edu_Data-Sets_data-coursera-sn-asgn1-for-asgn8-v2excell.csv")
View(bigdata.edu_Data.Sets_data.coursera.sn.asgn1.for.asgn8.v2excell)
bd<-bigdata.edu_Data.Sets_data.coursera.sn.asgn1.for.asgn8.v2excell
bd
summary(bd)
bd$id
bd$ID
data<-bigdata.edu_Data.Sets_data.coursera.sn.asgn1.for.asgn8.v2excell
data1 <- data[,c("poster","response.to")]
data2 <- data[,c("poster","ID")]
data1
data2
merged <- merge(data1, data2, by.x = "response.to", by.y = "ID")
merged
edges$Type <- rep("Undirected", length(edges$poster.x))
search()
install.packages("devtools")
library(devtools)
find_rtools()
library(devtools)
find_rtools()
library(devtools)
find_rtools()
Sys.getenv("R_USER")
install.packages(“RMySQL”, type = “source”)
install.packages(“RMySQL”)
Sys.getenv("R_USER")
dir()
normalizePath("~")
.Renviron
install.packages(“RMySQL”)
install.packages(“RMySQL”, type = “source”)
set.seed(1)
rpois(5,2)
rpois(5,2)
set.seed(1)
set.seed(1)
rpois(5,2)
library(datasets)
Rprof()
fit<-lm(y~x1+x2)
?Rprof()
x1<-rnorm(100)
x2<-rnorm(100,2)
y<-rnorm(100,2,2)
fit<-lm(y~x1+x2)
Rprof()
fit<-lm(y~x1+x2)
Rprof(NULL)
summaryRprof()
library(datasets)
data(cars)
with(cars,plot(speed, dist))
cars
plot(speed, dist)
plot(cars$speed, cars$dist)
library
(lattice)
state <- data.frame(state.x77, region = state.region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(
4
,
1
))
library(lattice)
state <- data.frame(state.x77, region = state.region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1)
)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(1,4)
)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
library
(ggplot2)
library(ggplot2)
data(mpg)
qplot(displ, hwy, data = mpg)
?par()
with(airquality, plot(Wind, Ozone, main =
"Ozone and Wind in New York City"
,
type =
"n"
))
with(subset(airquality, Month ==
5
), points(Wind, Ozone, col =
"blue"
))
with(subset(airquality, Month !=
5
), points(Wind, Ozone, col =
"red"
))
legend(
"topright"
, pch =
1
, col = c(
"blue"
,
"red"
), legend = c(
"May"
,
"Other Months"
))
model <- lm(Ozone ~ Wind, airquality)
abline(model, lwd =
2
)
abline(model, lwd =
3, color="blue"
)
abline(model, lwd =
3
)
abline(model, lwd =
3
)
abline(model, lwd =
2
)
pchShow()
x<-c(2,2,2)
pch()
?Devices()
date()
qnorm(.95,mean =mu, sd=sd)
qnorm(.95)
qnorm(.95,mean=0, sd=1)
0.75 * 0.3
(0.75 * 0.3)/((0.75 * 0.3)+(0.48*0.7))
0.48*0.7
0.225/(0.225+0.336)
qnorm(0.95, mean=1100, sd=75)
choose(5,4)
choose(5,4)*0.5^5+choose(5,5)*0.5^5
choose(5,4)*0.5^5+choose(5,5)*0.5^4
choose(5,4)*0.5^4+choose(5,5)*0.5^5
pbinom(3, size=5, prob=0.5, lower.tail=FALSE)
choose(5,5)
0.5^5
(0.5^5)*5
(0.5^5)*5 +(0.5^5)
ppois(10,lambda=5*3)
rnorm(n, mean, sd)
rnorm(100, 15, 10)
?qnorm()
qnorm(0.95)
qnorm(0.975)
qnorm(0.95, mean=1100, sd=75)
qnorm(0.95, mean=1100, sd=7.5)
qnorm(0.95, mean=15, sd=1)
pnorm(0.95, mean=15, sd=1)
pnorm(0.94, mean=15, sd=1)
qnorm(0.94, mean=15, sd=1)
qnorm(0.90, mean=15, sd=1)
qnorm(0.89, mean=15, sd=1)
qnorm(0.80, mean=15, sd=1)
qnorm(0.85, mean=15, sd=1)
qnorm(0.84, mean=15, sd=1)
qnorm(0.84, mean=15, sd=-1)
qnorm(0.84, mean=15, sd=1)
qnorm(0.05)
qnorm(0.05,mean=30,sd=1)
qnorm(0.05,mean=0,sd=1)
qnorm(0.05,mean=30,sd=31)
qnorm(0.05,sd=31)
qnorm(0.05,sd=1)
qnorm(0.05,sd=0.8)
qnorm(0.05,sd=0.5)
qnorm(0.05,sd=2.5)
qnorm(0.95,mean=30,sd=1)
qnorm(0.95,mean=30,sd=0.8)
qnorm(0.95,mean=30,sd=0.8)-30
(qnorm(0.95,mean=30,sd=0.8)-30)/0.8
library(UsingR)
data(father.son)
t.test(father.son$sheight -father.son$height)
t.test(father.son$sheight -father.son$fheight)
pbin(6, size=8, prob=0.5, lower.tail=FALSE)
Pbin(6, size=8, prob=0.5, lower.tail=FALSE)
search()
pbinom(6, size=8, prob=0.5, lower.tail=FALSE)
pbinom(7, size=8, prob=0.5, lower.tail=FALSE)
pbinom(0, size=8, prob=0.5, lower.tail=FALSE)
pbinom(0, size=8, prob=0.5)
pbinom(1, size=8, prob=0.5, lower.tail=FALSE)
t.test(father.son$sheight)
?qchisq()
library(UsingR)
x<-1100
n<-9
sd<-10
round(sqrt((n - 1) * s^2/qchisq(c(0.975, 0.025), n - 1)), 3)
round(sqrt((n - 1) * sd^2/qchisq(c(0.975, 0.025), n - 1)), 3)
round(sqrt((n - 1) * sd^2/qchisq(c(0.95, 0.5), n - 1)), 3)
round(sqrt((n - 1) * sd^2/qchisq(c(0.95, 0.5), n - 1)))
round(sqrt((n - 1) * sd^2/qchisq(c(0.95, 0.05), n - 1)))
round(sqrt((n - 1) * sd^2/qchisq(c(0.95, 0.05), n - 1)), 3)
round(sqrt((n - 1) * sd^2/qchisq(c(0.975, 0.025), n - 1)), 3)
0+ c(-1, 1) * qt(0.95, n - 1) * sd/sqrt(n)
mn + c(-1, 1) * qt(0.975, n - 1) * s/sqrt(n)
mn<--2
qt(.95,8)
-3-1+c(-1,1)*qt(0.9,16)*1.6568*(1/9 + 1/9)^0.5
-3-1+c(-1,1)*qt(0.975,16)*1.6568*(1/9 + 1/9)^0.5
-3-1+c(-1,1)*qt(0.1,16)*1.6568*(1/9 + 1/9)^0.5
-3-1+c(-1,1)*qt(0.9,16)*1.6568*sqrt(1/9 + 1/9)
1/9
1/9+1/9
sqrt(0.222222)
-3-1+c(-1,1)*qt(0.9,16)*1.6568*0.4714043
-3-1+c(-1,1)*qt(0.05,16)*1.6568*sqrt(1/9 + 1/9)
-3-1+c(-1,1)*qt(0.95,16)*1.6568*sqrt(1/9 + 1/9)
sp2<-((9*0.6)+(9*0.68))/18
sp2
sp<-sqrt(sp2)
sp
3-5+c(-1,1)*qt(0.025,18)*sp*sqrt(1/10 + 1/10)
qt(0.025,0.025)
qt(0.025,8)
qt(0.0125,8)
qt(0.095,8)
qt(0.95,8)
round(sqrt((9 - 1) * 30^2/qchisq(c(0.975, 0.025), 9 - 1)), 3)
round(sqrt((9 - 1) * 30^2/qchisq(c(0.95, 0.05), 9 - 1)), 3)
round(sqrt((9 - 1) * 30^2/qchisq(c(0.975, 0.025), 9 - 1)), 3)
round(sqrt((9 - 1) * 30^2/qchisq(c(0.95, 0.05), 9 - 1)), 3)
round(sqrt((8) * 30^2/qchisq(c(0.95, 0.05), 8)), 3)
round(sqrt((9 - 1) * 10^2/qchisq(c(0.975, 0.025), 9 - 1)), 3)
?aggregate()
?pt()
qnorm(.05)
qnorm(.95)
qnorm(.95)-2
poisson.test(11,1785,0.01,alternative="less")
binom.test(11,1785,0.01,alternative="less")
ppois(10,17.85,lower.tail=TRUE)
ppois(11,17.85,lower.tail=TRUE)
ppois(9,17.85,lower.tail=TRUE)
ppois(11,17.87,lower.tail=TRUE)
ppois(9,17.87,lower.tail=TRUE)
ppois(10,17.87,lower.tail=TRUE)
qnorm(0.95)
qnorm(0.95, mean=12, sd=0.4)
qnorm(0.95, mean=12, sd=0.4)
12.65794-12
qnorm(0.95, mean=12, sd=0.4)
12.65794-1.645
power.test(power=0.8,delta=0.1, sd=0.4, type="one.sample",alt="one.sided")$n
power.t.test(power=0.8,delta=0.1, sd=0.4, type="one.sample",alt="one.sided")$n
n <- (qnorm(.95) + qnorm(.8)) ^ 2 * .04 ^ 2 / .01^2
n
n <- (qnorm(.95) + qnorm(.8)) ^ 2 * .04 ^ 2 / .01^2
n
power.t.test(power=0.8,delta=0.01, sd=0.04, type="one.sample",alt="one.sided")$n
n <- (qnorm(.95) + qnorm(.9)) ^ 2 * .04 ^ 2 / .01^2
n
power.t.test(power=0.9,delta=0.01, sd=0.04, type="one.sample",alt="one.sided")$n
power.t.test(n=100,delta=0.01, sd=0.04, type="one.sample",alt="one.sided")$power
q2<-data.frame(subject=1:5,Baseline=c(140,138,150,148,135),week2=c(132,135,151,146,130))
q2
t.test(q2$Baseline - q2$week2)
?t.test()
t.test(q2$Baseline - q2$week2, alternative = "two.sided")
t.test(q2$Baseline - q2$week2, alternative = "two.sided")$p
p<-t.test(q2$Baseline - q2$week2, alternative = "two.sided")
p
str(p)
p$p.value
p<-t.test(q2$week2 - q2$Baseline, alternative = "two.sided")
p$p.value
p<-t.test(q2$week2,q2$Baseline, alternative = "two.sided")
p$p.value
p<-t.test(q2$week2 - q2$Baseline, alternative = "two.sided", paired=TRUE)
p<-t.test(q2$week2, q2$Baseline, alternative = "two.sided", paired=TRUE)
p
p<-t.test(q2$week2 - q2$Baseline, alternative = "two.sided", paired=TRUE)
p<-t.test(q2$week2,q2$Baseline, alternative = "two.sided")
p
p<-t.test(q2$week2,q2$Baseline, alternative = "two.sided",paired=TRUE)
p
pbin(2,size=4,prob=0.5, lower.tail=FALSE)
pbinom(2,size=4,prob=0.5, lower.tail=FALSE)
choose(4,3)*.5^4 + choose(4,4)*.5^4
b<-pbinom(2,size=4,prob=0.5, lower.tail=FALSE)
str(b)
pt(2.885,287,lower.tail=FALSE)
pt(2.885,287,lower.tail=FALSE) *2
?pnorm()
pnorm(1.96, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
pnorm(-1.96, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
pnorm(-1.96)
pnorm(-2)
t.test(-3,1,paired=FALSE, var.equal=TRUE)
library(kernlab)
data(spam)
View(spam)
View(spam)
table(spam$type)
plot (log10(spam[, 1:4]+1))
hCluster = hclust(dist(t(spam[, 1:57  ])))
plot(hCluster)
str(sm)
str(spam)
library(knitr)
opts_chunk$set(echo=TRUE)
```
###Loading Data
Here, we're going to load the activity monitoring data.
setwd("C:/Users/Rosa/Data Science Specialization/Reproducible research/peer_ass1/repdata_data_activity")
library(ggplot2)
library(grid)
library(gridExtra)
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1$save('fig/n1.html', cdn = TRUE)
cat('<iframe src="fig/n1.html" width=100%, height=600></iframe>')
install.packages("rCharts", lib="C:/Users/Rosa/Documents/R/win-library/2.15")
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1<- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male'))
n1
suppressPackageStartupMessages(library(googleVis))
gvisMotionChart(Fruits, "Fruit", "Year", options = list(width = 600, height = 400))
print(M, "chart")
gvisMotionChart(Fruits, "Fruit", "Year", options = list(width = 600, height = 400))
suppressPackageStartupMessages(library(googleVis))
M<-gvisMotionChart(Fruits, "Fruit", "Year", options = list(width = 600, height = 400))
print(M, "chart")
install.package(manipulate)
install.packages("manipulate")
gvisGeoChart(Exports, "Country", "Profit",options=list(width=200, height=100))
G <- gvisGeoChart(Exports, "Country", "Profit",options=list(width=200, height=100))
T1 <- gvisTable(Exports,options=list(width=200, height=270))
M <- gvisMotionChart(Fruits, "Fruit", "Year", options=list(width=400, height=370))
GT <- gvisMerge(G,T1, horizontal=FALSE)
GTM <- gvisMerge(GT, M, horizontal=TRUE,tableOptions="bgcolor=\"#CCCCCC\" cellspacing=10")
print(GTM, "chart")
GTM
library(manipulate)
library(manipulate)
print(GTM, "chart")
demo(googleVis)
pruebaRPresentation
pruebaRPresentation
setwd("C:/Users/Rosa/DataScienceSpecialization/Data Products/w1/shiny2")
runApp()
library(shiny)
runApp()
setwd("C:/Users/Rosa/DataScienceSpecialization/Data Products/project")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
celsius<-c(-50:50, size=200)
celsius
celsius<-c(-50:50, size=400)
celsius
celsius<-c(-50:50, size=100)
celsius<-c(-50:50)
celsius
celsius<-c(-50:50, step=0.5)
celsius
celsius<-c(-50:50)
fahrenheit <- celsius * 1.8 +32
fahrenheit
plot(fahrenhteit, celsius)
plot(fahrenheit, celsius)
plot(celsius, fahrenheit, type=h)
plot(celsius, fahrenheit, type="h")
plot(celsius, fahrenheit, type="l")
plot(celsius, fahrenheit, type="l", col="red",lwd=5)
plot(celsius, fahrenheit, type="l", col="red",lwd=3)
points(celsius = 0, fahrenheit= 32)
points(x = 0, y= 32)
points(x = 0, y= 32, lwd= 8)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
points(x = 0, y= 32, lwd= 8)
text("fahrenheit = ")
text("fahrenheit = ")
text(60, 150, paste("Fahrenheit = ", fahrenheit))
plot(celsius, fahrenheit, type="l")
points(x = 0, y= 32, lwd= 8)
text(60, 150, paste("Fahrenheit = ", fahrenheit))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd("C:/Users/Rosa/DataScienceSpecialization/Data Products/w2Slidify/project/first_deck")
setwd("C:/Users/Rosa/DataScienceSpecialization/Data Products/project")
shiny::runApp()
